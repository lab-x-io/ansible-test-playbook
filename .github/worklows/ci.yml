# De naam van onze geautomatiseerde taak.
name: Docker CI/CD

# De gebeurtenissen die deze taak starten.
on:
  # Als er iets wordt "gepusht" naar de "main" tak of als er een nieuwe versie-tag wordt toegevoegd.
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*' # Bijvoorbeeld v1.2.3

  # Als er een wijzigingsverzoek (pull request) is naar de "main" tak.
  pull_request:
    branches:
      - main

# De daadwerkelijke taken die worden uitgevoerd.
jobs:
  docker:
    # Deze taak wordt uitgevoerd op een virtuele machine met het nieuwste Ubuntu-besturingssysteem.
    runs-on: ubuntu-latest
    steps:
      # Haal de code van de huidige repository op.
      - name: Haal de code op
        uses: actions/checkout@v2

      # Verkrijg de naam van deze repository zonder het "docker-" voorvoegsel.
      - name: Haal de naam van de repository op
        id: repo_name
        run: echo "::set-output name=image_name::$(echo ${{ github.repository }} | sed -e 's#.*/docker-##')"

      # Bereid Docker voor om efficiÃ«ntere builds te gebruiken met "Buildx".
      - name: Bereid Docker voor
        uses: docker/setup-buildx-action@v1

      # Log in bij DockerHub (een website waar Docker-images worden opgeslagen) met een geheime gebruikersnaam en wachtwoord.
      - name: Log in bij DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Bepaal de naam en tags voor onze Docker-image.
      - name: Set up Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo_name.outputs.image_name }}
          tags: |
            type=semver,pattern={{version}},value=latest
            type=semver,pattern={{version}}
            type=ref,event=branch,value=latest
            type=sha,format=short

      # Bouw een nieuwe Docker-image met onze code en "push" (upload) deze naar DockerHub.
      - name: Bouw en upload de Docker-image
        uses: docker/build-push-action@v2
        with:
          context: .
          # We "pushen" (uploaden) alleen als het geen wijzigingsverzoek is, of als het een nieuwe versie-tag heeft.
          push: ${{ github.event_name != 'pull_request' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64,linux/arm64
